services:
  mysql:
    image: mysql:8.0
    container_name: shopdevgo-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_DATABASE: shopdevgo
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend-net

  redis:
    image: redis:latest
    container_name: shopdevgo-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - backend-net

  kafka:
    image: apache/kafka
    hostname: kafka
    container_name: kafka-kraft
    ports:
      - "19092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://0.0.0.0:9093,CONTROLLER://kafka:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:19092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_LOG_RETENTION_HOURS: 24

      # KAFKA_NODE_ID: 1
      # KAFKA_PROCESS_ROLES: broker,controller
      # KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9094
      # KAFKA_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://0.0.0.0:19092,CONTROLLER://kafka:9094
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:19092
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      # KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

    networks:
      - backend-net
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092 > /dev/null 2>&1",
        ]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - kafka-data:/var/lib/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: "kraft-cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - backend-net

  # debezium-connect:
  #   image: debezium/connect:2.7.3.Final
  #   container_name: debezium-connect
  #   depends_on:
  #     - kafka
  #     - mysql
  #   environment:
  #     BOOTSTRAP_SERVERS: kafka:9092
  #     GROUP_ID: "1"
  #     CONFIG_STORAGE_TOPIC: debezium_connect_configs
  #     OFFSET_STORAGE_TOPIC: debezium_connect_offsets
  #     STATUS_STORAGE_TOPIC: debezium_connect_status

  #     KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     KEY_CONVERTER_SCHEMAS_ENABLE: "false"
  #     VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
  #   ports:
  #     - "8083:8083"
  #   networks:
  #   - backend-net

volumes:
  mysql-data:
  redis-data:
  kafka-data:

networks:
  backend-net:
    driver: bridge
